<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name></display-name>
	<!-- 上下文 -->
	<context-param>
		<description>上下文的配置</description>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:applicationContext-*.xml</param-value>
	</context-param>
    <context-param>
       <param-name>attachDirectory</param-name>
       <param-value>d:\attachDirectory</param-value>
    </context-param>

	<!-- 上下文监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    <!-- 自定义的监听类，可以监听用户的登录及注销，记入日志中 -->  
     <listener>  
          <listener-class>com.ey.listener.CommonListener</listener-class>  
     </listener> 
	<listener> <!-- Spring 刷新Introspector防止内存泄露 -->
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- 配置spring管理OpenEntityManagerInViewFilter <filter> <filter-name>hibernateFilter</filter-name> 
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class> 
		</filter> <filter-mapping> <filter-name>hibernateFilter</filter-name> <url-pattern>/*</url-pattern> 
		</filter-mapping> -->

	<!-- shiro/和springSecurity共同权限管理配置描述 <filter> <filter-name>springSecurityFilterChain</filter-name> 
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		<init-param> <param-name>targetFilterLifecycle</param-name> <param-value>true</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>springSecurityFilterChain</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->

	<!-- 字符编码过滤器 -->
	<filter>
		<description>字符编码过滤器</description>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- hibernateSession过滤器 -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		<!-- singleSession默认为true，若设为false则便是没用OpenSessionInView -->
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 解决Hibernate的Write operations are not allowed in read-only mode (FlushMode.NEVER/MANUAL):Turn 
			your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from 
			transaction definition.问题 -->
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param>
		<!-- 默认景象下，这个Filter会在Spring的bean池中找一个叫做sessionFactory的bean。若是应用了其他名字的SessionFactory，则应当在这里 -->
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<!--指定对Spring配置中哪个sessionFactory使用OpenSessionInView -->
			<param-value>sessionFactory</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<!-- sitemesh 
	<filter>
 	    <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
 	</filter>
 	<filter-mapping>
        <filter-name>sitemesh</filter-name>
         <url-pattern>/*</url-pattern>
    </filter-mapping>-->

	<!-- springMVC -->
	<servlet>
		<description>springMVC</description>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- 错误页面 -->
	<error-page>
		<error-code>403</error-code>
		<location>/pages/template/jsp/error/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/pages/template/jsp/error/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>406</error-code>
		<location>/pages/template/jsp/error/406.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/pages/template/jsp/error/500.jsp</location>
	</error-page>


	<!-- 欢迎页面 -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

</web-app>